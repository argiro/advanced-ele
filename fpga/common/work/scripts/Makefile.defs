
#-----------------------------------------------------------------------------------------------------
#                               University of Torino - Department of Physics
#                                   via Giuria 1 10125, Torino, Italy
#-----------------------------------------------------------------------------------------------------
# [Filename]       Makefile.defs
# [Project]        Advanced Electronics Laboratory course
# [Author]         Luca Pacher - pacher@to.infn.it
# [Language]       GNU Makefile
# [Created]        Mar 05, 2016
# [Modified]       Mar 05, 2016
# [Description]    Targets implementation file
# [Notes]          ** DO NOT EDIT **
# [Version]        1.0
# [Revisions]      05.03.2015 - Created
#-----------------------------------------------------------------------------------------------------


## by default, call the help
default  : help


## setup a working area from scratch
area :
	@mkdir -p $(LOG_DIR)
	@mkdir -p $(TCL_DIR)
	@mkdir -p $(RPT_DIR)
	@mkdir -p $(RPT_DIR)/synthesis
	@mkdir -p $(RPT_DIR)/placement
	@mkdir -p $(RPT_DIR)/routing
	@mkdir -p $(OUT_DIR)
	@mkdir -p $(OUT_DIR)/bitstream
	@mkdir -p $(OUT_DIR)/checkpoints


## just an easier alias
bit : xflow


## run the complete non-project mode Xilinx Vivado FPGA implementation flow
xflow :

	@vivado -mode tcl -source $(TCL_DIR)/xflow.tcl -nojournal -log $(LOG_DIR)/flow.log


## download an existing bitstream to target FPGA
download :

	@vivado -mode tcl -source $(TCL_DIR)/download.tcl -nojournal -log $(LOG_DIR)/download.log


## remove log files
clean :
	@$(RM)     $(LOG_DIR)/*.log
	@$(RM)     *.log
	@$(RM)     *.html
	@$(RM)     *.xml
	@$(RM)     *.jou
	@$(RMDIR)  .hw
	@$(RMDIR)  .Xil


## command-line help
help :
	@echo "                                                                          "
	@echo "   At the command line, type:                                             "
	@echo "                                                                          "
	@echo "      make area      => setup a working area from scratch                 "
	@echo "      make bit       => run the complete FPGA implementation flow         "
	@echo "      make download  => download an existing bitstream to target FPGA     "
	@echo "      make clean     => remove log files and other temporary files        "
	@echo "------------------------------------------------------------------------  "
